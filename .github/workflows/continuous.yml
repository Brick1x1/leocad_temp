name: LeoCAD CI

on:
  push:
    branches: [ "master" ]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Qt
      uses: jurplel/install-qt-action@v3  
      with:
        cache: 'true'
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v1
      id: cpu-cores
    - name: Generate Makefile
      run: qmake PREFIX=/usr
    - name: Build
      run: make -j ${{ steps.cpu-cores.outputs.count }}
    - name: Install
      run: make install INSTALL_ROOT=AppDir
    - name: Cache Library
      uses: actions/cache@v3
      id: cache-library
      with:
        path: AppDir/usr/share/leocad/library.bin
        key: library-20.03
    - name: Download Library
      if: steps.cache-library.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/leozide/leocad/releases/download/v19.07.1/Library-20.03.zip -O library.zip
        unzip library.zip
        mkdir -p AppDir/usr/share/leocad
        mv library.bin AppDir/usr/share/leocad/library.bin
    - name: Create AppImage
      run: |
        cp qt/leocad.desktop AppDir/leocad.desktop
        cp tools/icon/256x256/apps/leocad.png AppDir/leocad.png
        wget -q -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        chmod a+x linuxdeployqt*.AppImage 
        unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
        export VERSION=$(git rev-parse --short HEAD)
        ./linuxdeployqt*.AppImage ./AppDir/usr/share/applications/*.desktop -bundle-non-qt-libs -unsupported-allow-new-glibc
        echo done1
        ./linuxdeployqt*.AppImage --appimage-extract
        echo done2
        export PATH=$(readlink -f ./squashfs-root/usr/bin/):$PATH
        ./squashfs-root/usr/bin/appimagetool AppDir/
        mv ./LeoCAD-$VERSION-x86_64.AppImage ./LeoCAD-Linux-$VERSION-x86_64.AppImage 
    - name: Upload AppImage
      run: |
        'curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/leozide/leocad/commits/master -o repo.txt'
        'export REMOTE=$(grep -Po ''(?<=: \")(([a-z0-9])\w+)(?=\")'' -m 1 repo.txt)'
        export LOCAL=$(git rev-parse HEAD)
        if [[ "$REMOTE" != "$LOCAL" ]]; then echo "Build no longer current. $REMOTE vs $LOCAL - aborting upload."; exit 0; fi;
        wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
        bash upload.sh LeoCAD*.AppImage*

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Qt
      uses: jurplel/install-qt-action@v3  
      with:
        cache: 'true'
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v1
      id: cpu-cores
    - name: Generate Makefile
      run: qmake PREFIX=/usr
    - name: Cache Library
      uses: actions/cache@v3
      id: cache-library
      with:
        path: library.bin
        key: library-20.03
    - name: Download Library
      if: steps.cache-library.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/leozide/leocad/releases/download/v19.07.1/Library-20.03.zip -O library.zip
        unzip library.zip
    - name: Cache POV-Ray
      uses: actions/cache@v3
      id: cache-povray
      with:
        path: povray
        key: povray-20.03
    - name: Download POV-Ray
      if: steps.cache-povray.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/leozide/povray/releases/download/continuous/povray
        chmod +x povray
    - name: Build
      run: make -j ${{ steps.cpu-cores.outputs.count }}
    - name: Create Package
      run: |
        cd build/release
        macdeployqt LeoCAD.app -dmg
        mv LeoCAD.dmg LeoCAD-macOS-$(git rev-parse --short HEAD).dmg
    - name: Upload Package
      run: |
        curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/leozide/leocad/commits/master -o repo.txt
        export REMOTE=$(ggrep -Po ''(?<=: \")(([a-z0-9])\w+)(?=\")'' -m 1 repo.txt)
        export LOCAL=$(git rev-parse HEAD)
        if [[ "$REMOTE" != "$LOCAL" ]]; then echo "Build no longer current. $REMOTE vs $LOCAL - aborting upload."; exit 0; fi;
        export TRAVIS_TAG=$GITHUB_REF_NAME
        export TRAVIS_REPO_SLUG=$GITHUB_REPOSITORY
        export TRAVIS_COMMIT=$GITHUB_SHA
        wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
        bash upload.sh LeoCAD*.dmg*
